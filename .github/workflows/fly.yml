name: Fly Deploy
'on':
# -------------------------------------------
# Add ðŸ‘‡ to test when submitting a PR
# -------------------------------------------
    # pull_request:
    #     branches:
    #         - '*'
    #     types:
    #       - labeled
    #       - opened
    #       - synchronize
    #       - reopened

# -------------------------------------------
#  Comment ðŸ‘‡ to try with a PR
# -------------------------------------------
  workflow_run:
    workflows:
      - CI
    branches:
      - main
    types:
      - completed

env:
    MIX_ENV: prod

jobs:
  production:
    name: "[Prod] Deployment"
    runs-on: ubuntu-latest
    # Add when deployment works
    # if: ${{ github.event.workflow_run.conclusion == ''success'' }}
    strategy:
        # Defines the versions to use of OTP and Elixir
        # when the workflow steps are built and executed
        matrix:
          otp: ['26.1.1']
          elixir: ['1.15-otp-26']
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.0
        with:
          access_token: ${{ github.token }}

      ## Configure buildx for docker cache
      - name: Configure Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Validates the reference in the repository to match
      # the ref/SHA that triggered the workflow.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Elixir Preparation
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Retrieve cached dependencies
        uses: actions/cache@v3
        id: mix-cache
        with:
          path: |
            deps
            _build
            priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}

      - name: Install dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only prod
          mix compile
          mix assets.deploy

      - name: Generate package for deployment
        run: |
          mix phx.gen.release
          mix release

      - name: Create file to manage version
        run: bash ./scripts/version.sh

      - name: Copy env.sh.eex file
        run: cp ./scripts/env.sh.eex rel/

      - name: Avoid overwriting the release file
        run: git --no-optional-locks checkout -- lib/xFood/release.ex

      - name: Get github sha
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "app_version=$(cat VERSION)" >> $GITHUB_OUTPUT


      - name: ðŸš€ Deployment to production
        uses: superfly/flyctl-actions@1.4
        with:
          args: |
            deploy --remote-only \
                   --build-arg="APP_VERSION=${{ steps.vars.outputs.app_version }}" \
                   --build-arg="APP_SHA=${{ steps.vars.outputs.sha_short }}" \
                   --build-arg="MIX_ENV=prod" \
                   --config fly.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
